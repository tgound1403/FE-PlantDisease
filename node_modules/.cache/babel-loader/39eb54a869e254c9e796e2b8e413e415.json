{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgound\\\\Desktop\\\\NCKH\\\\Web1\\\\frontend\\\\src\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport Comment from \"./Comment\";\nimport { createComment as createCommentApi, updateComment as updateCommentApi, deleteComment as deleteCommentApi } from \"../api/commentAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst Comments = ({\n  commentsUrl,\n  currentUserId,\n  closeModal\n}) => {\n  _s();\n\n  const [backendComments, setBackendComments] = useState([]);\n  const [activeComment, setActiveComment] = useState(null);\n  const [comments, setComments] = useState([]); // const rootComments = backendComments.filter(\n  //   (backendComment) => backendComment.parentId === null\n  // );\n\n  const getReplies = commentId => backendComments.filter(backendComment => backendComment.parentId === commentId).sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n\n  const addComment = (text, parentId) => {\n    createCommentApi(text, parentId).then(comment => {\n      setBackendComments([comment, ...backendComments]);\n      setActiveComment(null);\n    });\n  };\n\n  const updateComment = (text, commentId) => {\n    updateCommentApi(text).then(() => {\n      const updatedBackendComments = backendComments.map(backendComment => {\n        if (backendComment.id === commentId) {\n          return { ...backendComment,\n            body: text\n          };\n        }\n\n        return backendComment;\n      });\n      setBackendComments(updatedBackendComments);\n      setActiveComment(null);\n    });\n  };\n\n  const deleteComment = commentId => {\n    if (window.confirm(\"Are you sure you want to remove comment?\")) {\n      deleteCommentApi().then(() => {\n        const updatedBackendComments = backendComments.filter(backendComment => backendComment.id !== commentId);\n        setBackendComments(updatedBackendComments);\n      });\n    }\n  };\n\n  const getComments = () => {\n    axios.get('/api/comments').then(response => {\n      let data = response.data;\n      data = data.reverse();\n      setComments(data);\n      console.log(\"Comment has been received\");\n      console.log(data);\n    }).catch(error => {\n      alert('Error while getting comments');\n      console.log(error);\n    });\n  };\n\n  const displayComments = comments => {\n    if (!comments.length) return null;\n    return comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment,\n      replies: getReplies(comment.id),\n      activeComment: activeComment,\n      setActiveComment: setActiveComment,\n      addComment: addComment,\n      deleteComment: deleteComment,\n      updateComment: updateComment,\n      currentUserId: currentUserId\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this));\n  };\n\n  useEffect(() => {\n    // getCommentsApi().then((data) => {\n    //   setBackendComments(data);\n    // });\n    getComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"comments-title\",\n        children: \"B\\xECnh lu\\u1EADn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      submitLabel: \"B\\xECnh lu\\u1EADn\",\n      handleSubmit: addComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: displayComments(comments)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"Alyt2wAyXnKo9ZNwk3mLLC7vgxA=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/tgound/Desktop/NCKH/Web1/frontend/src/comments/Comments.js"],"names":["useState","useEffect","CommentForm","Comment","createComment","createCommentApi","updateComment","updateCommentApi","deleteComment","deleteCommentApi","axios","require","Comments","commentsUrl","currentUserId","closeModal","backendComments","setBackendComments","activeComment","setActiveComment","comments","setComments","getReplies","commentId","filter","backendComment","parentId","sort","a","b","Date","createdAt","getTime","addComment","text","then","comment","updatedBackendComments","map","id","body","window","confirm","getComments","get","response","data","reverse","console","log","catch","error","alert","displayComments","length","index"],"mappings":"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","sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport Comment from \"./Comment\";\r\nimport {\r\n  createComment as createCommentApi,\r\n  updateComment as updateCommentApi,\r\n  deleteComment as deleteCommentApi,\r\n} from \"../api/commentAPI.js\";\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst Comments = ({ commentsUrl, currentUserId, closeModal }) => {\r\n  const [backendComments, setBackendComments] = useState([]);\r\n  const [activeComment, setActiveComment] = useState(null);\r\n\r\n  const [comments, setComments] = useState([]);\r\n  // const rootComments = backendComments.filter(\r\n  //   (backendComment) => backendComment.parentId === null\r\n  // );\r\n\r\n  const getReplies = (commentId) =>\r\n    backendComments\r\n      .filter((backendComment) => backendComment.parentId === commentId)\r\n      .sort(\r\n        (a, b) =>\r\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\r\n      );\r\n\r\n  const addComment = (text, parentId) => {\r\n    createCommentApi(text, parentId).then((comment) => {\r\n      setBackendComments([comment, ...backendComments]);\r\n      setActiveComment(null);\r\n    });\r\n  };\r\n\r\n  const updateComment = (text, commentId) => {\r\n    updateCommentApi(text).then(() => {\r\n      const updatedBackendComments = backendComments.map((backendComment) => {\r\n        if (backendComment.id === commentId) {\r\n          return { ...backendComment, body: text };\r\n        }\r\n        return backendComment;\r\n      });\r\n      setBackendComments(updatedBackendComments);\r\n      setActiveComment(null);\r\n    });\r\n  };\r\n\r\n  const deleteComment = (commentId) => {\r\n    if (window.confirm(\"Are you sure you want to remove comment?\")) {\r\n      deleteCommentApi().then(() => {\r\n        const updatedBackendComments = backendComments.filter(\r\n          (backendComment) => backendComment.id !== commentId\r\n        );\r\n        setBackendComments(updatedBackendComments);\r\n      });\r\n    }\r\n  };\r\n\r\n  const getComments = () => {\r\n    axios.get('/api/comments')\r\n      .then((response) => {\r\n        let data = response.data;\r\n        data = data.reverse()\r\n        setComments(data);\r\n        console.log(\"Comment has been received\");\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        alert('Error while getting comments')\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const displayComments = (comments) => {\r\n\r\n    if (!comments.length) return null;\r\n\r\n    return comments.map((comment, index) => (\r\n      <Comment\r\n        key={index}\r\n        comment={comment}\r\n        replies={getReplies(comment.id)}\r\n        activeComment={activeComment}\r\n        setActiveComment={setActiveComment}\r\n        addComment={addComment}\r\n        deleteComment={deleteComment}\r\n        updateComment={updateComment}\r\n        currentUserId={currentUserId}\r\n      />\r\n    ))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // getCommentsApi().then((data) => {\r\n    //   setBackendComments(data);\r\n    // });\r\n    getComments();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"comment-section-header\">\r\n        <h3 className=\"comments-title\">Bình luận</h3>\r\n      </div>\r\n      <CommentForm submitLabel=\"Bình luận\" handleSubmit={addComment} />\r\n      <div className=\"comments-container\">\r\n        {displayComments(comments)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}