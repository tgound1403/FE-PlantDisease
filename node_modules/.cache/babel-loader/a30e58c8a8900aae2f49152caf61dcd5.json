{"ast":null,"code":"// https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images/31273162#31273162\nconst orientation = file => {\n  return new Promise(resolve => {\n    const reader = new window.FileReader();\n\n    reader.onload = function (event) {\n      var view = new DataView(event.target.result);\n\n      if (view.getUint16(0, false) !== 0xffd8) {\n        resolve(-2);\n      }\n\n      const length = view.byteLength;\n      let offset = 2;\n\n      while (offset < length) {\n        const marker = view.getUint16(offset, false);\n        offset += 2;\n\n        if (marker === 0xffe1) {\n          if (view.getUint32(offset += 2, false) !== 0x45786966) {\n            resolve(-1);\n          }\n\n          const little = view.getUint16(offset += 6, false) === 0x4949;\n          offset += view.getUint32(offset + 4, little);\n          const tags = view.getUint16(offset, little);\n          offset += 2;\n\n          for (let i = 0; i < tags; i++) {\n            if (view.getUint16(offset + i * 12, little) === 0x0112) {\n              resolve(view.getUint16(offset + i * 12 + 8, little));\n            }\n          }\n        } else if ((marker & 0xff00) !== 0xff00) break;else offset += view.getUint16(offset, false);\n      }\n\n      resolve(-1);\n    };\n\n    reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n  });\n};\n\nexport default {\n  orientation\n};","map":{"version":3,"sources":["C:/Users/tgound/Desktop/NCKH/Web1/frontend/node_modules/compress.js/src/core/rotate.js"],"names":["orientation","file","Promise","resolve","reader","window","FileReader","onload","event","view","DataView","target","result","getUint16","length","byteLength","offset","marker","getUint32","little","tags","i","readAsArrayBuffer","slice"],"mappings":"AAAA;AAEA,MAAMA,WAAW,GAAIC,IAAD,IAAU;AAC5B,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,UAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAf;;AAEAF,IAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC/B,UAAIC,IAAI,GAAG,IAAIC,QAAJ,CAAaF,KAAK,CAACG,MAAN,CAAaC,MAA1B,CAAX;;AAEA,UAAIH,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkB,KAAlB,MAA6B,MAAjC,EAAyC;AACvCV,QAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACD;;AACD,YAAMW,MAAM,GAAGL,IAAI,CAACM,UAApB;AACA,UAAIC,MAAM,GAAG,CAAb;;AAEA,aAAOA,MAAM,GAAGF,MAAhB,EAAwB;AACtB,cAAMG,MAAM,GAAGR,IAAI,CAACI,SAAL,CAAeG,MAAf,EAAuB,KAAvB,CAAf;AACAA,QAAAA,MAAM,IAAI,CAAV;;AAEA,YAAIC,MAAM,KAAK,MAAf,EAAuB;AACrB,cAAIR,IAAI,CAACS,SAAL,CAAgBF,MAAM,IAAI,CAA1B,EAA8B,KAA9B,MAAyC,UAA7C,EAAyD;AACvDb,YAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACD;;AACD,gBAAMgB,MAAM,GAAGV,IAAI,CAACI,SAAL,CAAgBG,MAAM,IAAI,CAA1B,EAA8B,KAA9B,MAAyC,MAAxD;AACAA,UAAAA,MAAM,IAAIP,IAAI,CAACS,SAAL,CAAeF,MAAM,GAAG,CAAxB,EAA2BG,MAA3B,CAAV;AACA,gBAAMC,IAAI,GAAGX,IAAI,CAACI,SAAL,CAAeG,MAAf,EAAuBG,MAAvB,CAAb;AACAH,UAAAA,MAAM,IAAI,CAAV;;AAEA,eAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAApB,EAA0BC,CAAC,EAA3B,EAA+B;AAC7B,gBAAIZ,IAAI,CAACI,SAAL,CAAeG,MAAM,GAAGK,CAAC,GAAG,EAA5B,EAAgCF,MAAhC,MAA4C,MAAhD,EAAwD;AACtDhB,cAAAA,OAAO,CAACM,IAAI,CAACI,SAAL,CAAeG,MAAM,GAAGK,CAAC,GAAG,EAAb,GAAkB,CAAjC,EAAoCF,MAApC,CAAD,CAAP;AACD;AACF;AACF,SAdD,MAcO,IAAI,CAACF,MAAM,GAAG,MAAV,MAAsB,MAA1B,EAAkC,MAAlC,KACFD,MAAM,IAAIP,IAAI,CAACI,SAAL,CAAeG,MAAf,EAAuB,KAAvB,CAAV;AACN;;AACDb,MAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACD,KA/BD;;AAgCAC,IAAAA,MAAM,CAACkB,iBAAP,CAAyBrB,IAAI,CAACsB,KAAL,CAAW,CAAX,EAAc,KAAK,IAAnB,CAAzB;AACD,GApCM,CAAP;AAqCD,CAtCD;;AAwCA,eAAe;AAAEvB,EAAAA;AAAF,CAAf","sourcesContent":["// https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images/31273162#31273162\n\nconst orientation = (file) => {\n  return new Promise((resolve) => {\n    const reader = new window.FileReader();\n\n    reader.onload = function (event) {\n      var view = new DataView(event.target.result);\n\n      if (view.getUint16(0, false) !== 0xffd8) {\n        resolve(-2);\n      }\n      const length = view.byteLength;\n      let offset = 2;\n\n      while (offset < length) {\n        const marker = view.getUint16(offset, false);\n        offset += 2;\n\n        if (marker === 0xffe1) {\n          if (view.getUint32((offset += 2), false) !== 0x45786966) {\n            resolve(-1);\n          }\n          const little = view.getUint16((offset += 6), false) === 0x4949;\n          offset += view.getUint32(offset + 4, little);\n          const tags = view.getUint16(offset, little);\n          offset += 2;\n\n          for (let i = 0; i < tags; i++) {\n            if (view.getUint16(offset + i * 12, little) === 0x0112) {\n              resolve(view.getUint16(offset + i * 12 + 8, little));\n            }\n          }\n        } else if ((marker & 0xff00) !== 0xff00) break;\n        else offset += view.getUint16(offset, false);\n      }\n      resolve(-1);\n    };\n    reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n  });\n};\n\nexport default { orientation };\n"]},"metadata":{},"sourceType":"module"}