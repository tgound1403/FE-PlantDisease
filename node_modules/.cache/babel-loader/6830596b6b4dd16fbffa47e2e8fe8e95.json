{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgound\\\\Desktop\\\\NCKH\\\\Web1\\\\frontend\\\\src\\\\pages\\\\Prediction\\\\Predict-fert\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport axios from \"axios\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport \"../api/recommenderapi.js\";\nimport { fertilizerData } from \"../Data\";\nimport './index.css';\nimport { Footer } from '../../../components/Footer';\nimport { Header } from '../../../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"280px\",\n    backgroundColor: \"whitesmoke\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  root: {\n    maxWidth: 550\n  },\n  table: {\n    minWidth: 450\n  }\n}));\nexport const PredictFert = () => {\n  _s();\n\n  const [isOpenModal, setIsOpenModal] = React.useState(false);\n  const [formData, setFormData] = useState({\n    temperature: \"\",\n    humidity: \"\",\n    moisture: \"\",\n    soil_type: \"\",\n    crop_type: \"\",\n    nitrogen: \"\",\n    potassium: \"\",\n    phosphorous: \"\"\n  });\n  const [predictionData, setPredictionData] = useState({});\n  const classes = useStyles();\n  const formRenderData = [{\n    name: \"nitrogen\",\n    description: \"Lượng nitơ trong đất\"\n  }, {\n    name: \"potassium\",\n    description: \"Lượng Kali trong đất\"\n  }, {\n    name: \"phosphorous\",\n    description: \"Lượng phốt pho trong đất\"\n  }, {\n    name: \"temperature\",\n    description: \"Nhiệt độ (ở Celcius)\"\n  }, {\n    name: \"humidity\",\n    description: \"Độ ẩm (tính bằng%)\"\n  }, {\n    name: \"moisture\",\n    description: \"Độ ẩm trong đất\"\n  }];\n  const soilTypes = ['đất cát pha', 'đất pha sét', 'đất đen', 'đất đỏ', 'đất sét'];\n  const cropTypes = ['ngô', 'mía', 'bông', 'thuốc lá', 'lúa', 'lúa mạch', 'lúa mì', 'kê', 'hạt dầu', 'bột giấy', 'hạt xay'];\n\n  const handleChange = (e, changeKey = undefined) => {\n    // console.log(changeKey, e.target.value)\n    let newData = { ...formData\n    };\n\n    if (changeKey) {\n      newData[changeKey] = e.target.value;\n    } else newData[e.target.id] = e.target.value;\n\n    console.log(newData);\n    setFormData(newData);\n  };\n\n  const handleClick = () => {\n    // Tao ra mot Object co ten la data\n    const request = new FormData(); // cho vong lap key trong data them tung key vao data\n\n    for (let key in formData) {\n      request.append(key, formData[key]);\n    }\n\n    console.log(request); // Su dung phuong thuc post de tra ve data \n\n    axios({\n      // phuong thuc post\n      method: 'POST',\n      // duong link api\n      url: 'http://localhost:5000/predict_fertilizer',\n      // data\n      data: request,\n      // nhieu du lieu\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      // cai dat lai data bang res.data (data o day la object)\n      const responseData = res.data;\n      console.log(responseData);\n      setPredictionData(responseData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleBackClick = () => {\n    setPredictionData({});\n  };\n\n  const predictedFertilizer = fertilizerData[predictionData.final_prediction];\n\n  if (predictionData.final_prediction) {\n    const outputComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isOpenModal: isOpenModal,\n        setIsOpenModal: setIsOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output_container\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: `${classes.root} output_container__card`,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: predictedFertilizer.title,\n            height: \"225\",\n            image: predictedFertilizer.imageUrl,\n            title: predictedFertilizer.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h4\",\n              component: \"h2\",\n              children: [\"\\u0110\\u1EC1 xu\\u1EA5t cho \\u0111\\u1EA5t d\\xF9ng ph\\xE2n b\\xF3n \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: predictedFertilizer.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: predictedFertilizer.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: classes.table,\n                \"aria-label\": \"simple table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      align: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"D\\u1EF1 \\u0111o\\xE1n m\\xF4 h\\xECnh XGBoost\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 86\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      align: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"D\\u1EF1 \\u0111o\\xE1n m\\xF4 h\\xECnh ng\\u1EABu nhi\\xEAn\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 86\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      align: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"D\\u1EF1 \\u0111o\\xE1n m\\xF4 h\\xECnh SVM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 86\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [predictionData.xgb_model_prediction, \" (\", predictionData.xgb_model_probability, \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [predictionData.rf_model_prediction, \" (\", predictionData.rf_model_probability, \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: [predictionData.svm_model_prediction, \" (\", predictionData.svm_model_probability, \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleBackClick(),\n              className: \"back__button\",\n              variant: \"contained\",\n              size: \"small\",\n              color: \"primary\",\n              children: \"Tr\\u1EDF v\\u1EC1 trang d\\u1EF1 \\u0111o\\xE1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n\n    return outputComponent;\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isOpenModal: isOpenModal,\n      setIsOpenModal: setIsOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__form_group\",\n        children: [predictionData.error && /*#__PURE__*/_jsxDEV(Alert, {\n          style: {\n            marginTop: \"20px\"\n          },\n          severity: \"error\",\n          children: [\" \", predictionData.error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__title\",\n            children: \"\\u0110\\u1EC1 xu\\u1EA5t ph\\xE2n b\\xF3n cho \\u0111\\u1EA5t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), formRenderData.map(formAttribute => {\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => handleChange(e),\n            value: formData[formAttribute.name],\n            className: \"form__text_field\",\n            id: formAttribute.name,\n            name: formAttribute.name,\n            variant: \"filled\",\n            label: formAttribute.description\n          }, formAttribute.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 36\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"soil_type\",\n          name: \"soil_type\",\n          select: true,\n          label: \"Lo\\u1EA1i \\u0111\\u1EA5t\",\n          value: formData.soil_type,\n          onChange: e => handleChange(e, \"soil_type\"),\n          SelectProps: {\n            native: true\n          },\n          variant: \"filled\",\n          className: \"form__text_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"select\",\n            children: \"Chọn\"\n          }, \"select\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), soilTypes.map(soiltype => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: soiltype,\n            children: soiltype\n          }, soiltype, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"soil_type\",\n          name: \"soil_type\",\n          select: true,\n          label: \"Lo\\u1EA1i h\\u1EA1t\",\n          value: formData.crop_type,\n          onChange: e => handleChange(e, \"crop_type\"),\n          SelectProps: {\n            native: true\n          },\n          variant: \"filled\",\n          className: \"form__text_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"select\",\n            children: \"Chọn\"\n          }, \"select\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), cropTypes.map(croptype => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: croptype,\n            children: croptype\n          }, croptype, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClick(),\n          className: \"form__button\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"D\\u1EF1 \\u0111o\\xE1n ph\\xE2n b\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PredictFert, \"O8rtm/xxmrKTh6iIKToCBNV2Ej0=\", false, function () {\n  return [useStyles];\n});\n\n_c = PredictFert;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictFert\");","map":{"version":3,"sources":["C:/Users/tgound/Desktop/NCKH/Web1/frontend/src/pages/Prediction/Predict-fert/index.js"],"names":["React","useState","Button","TextField","makeStyles","Alert","axios","Card","CardActions","CardContent","CardMedia","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","fertilizerData","Footer","Header","useStyles","theme","formControl","margin","spacing","width","backgroundColor","selectEmpty","marginTop","root","maxWidth","table","minWidth","PredictFert","isOpenModal","setIsOpenModal","formData","setFormData","temperature","humidity","moisture","soil_type","crop_type","nitrogen","potassium","phosphorous","predictionData","setPredictionData","classes","formRenderData","name","description","soilTypes","cropTypes","handleChange","e","changeKey","undefined","newData","target","value","id","console","log","handleClick","request","FormData","key","append","method","url","data","headers","then","res","responseData","catch","err","handleBackClick","predictedFertilizer","final_prediction","outputComponent","title","imageUrl","xgb_model_prediction","xgb_model_probability","rf_model_prediction","rf_model_probability","svm_model_prediction","svm_model_probability","error","map","formAttribute","native","soiltype","croptype"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport axios from \"axios\"\r\n\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport \"../api/recommenderapi.js\"\r\nimport { fertilizerData } from \"../Data\"\r\nimport './index.css'\r\nimport { Footer } from '../../../components/Footer';\r\nimport { Header } from '../../../components/Header';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: \"280px\",\r\n        backgroundColor: \"whitesmoke\",\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        maxWidth: 550,\r\n    },\r\n    table: {\r\n        minWidth: 450,\r\n    },\r\n}));\r\n\r\nexport const PredictFert = () => {\r\n\r\n    const [isOpenModal, setIsOpenModal] = React.useState(false);\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        temperature: \"\",\r\n        humidity: \"\",\r\n        moisture: \"\",\r\n        soil_type: \"\",\r\n        crop_type: \"\",\r\n        nitrogen: \"\",\r\n        potassium: \"\",\r\n        phosphorous: \"\",\r\n    })\r\n\r\n    const [predictionData, setPredictionData] = useState({})\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const formRenderData = [\r\n        {\r\n            name: \"nitrogen\",\r\n            description: \"Lượng nitơ trong đất\"\r\n        },\r\n        {\r\n            name: \"potassium\",\r\n            description: \"Lượng Kali trong đất\"\r\n        },\r\n        {\r\n            name: \"phosphorous\",\r\n            description: \"Lượng phốt pho trong đất\"\r\n        },\r\n        {\r\n            name: \"temperature\",\r\n            description: \"Nhiệt độ (ở Celcius)\"\r\n        },\r\n        {\r\n            name: \"humidity\",\r\n            description: \"Độ ẩm (tính bằng%)\"\r\n        },\r\n        {\r\n            name: \"moisture\",\r\n            description: \"Độ ẩm trong đất\"\r\n        },\r\n\r\n    ]\r\n\r\n    const soilTypes = ['đất cát pha', 'đất pha sét', 'đất đen', 'đất đỏ', 'đất sét']\r\n    const cropTypes = ['ngô', 'mía', 'bông', 'thuốc lá', 'lúa', 'lúa mạch', 'lúa mì', 'kê', 'hạt dầu', 'bột giấy', 'hạt xay']\r\n\r\n    const handleChange = (e, changeKey = undefined) => {\r\n        // console.log(changeKey, e.target.value)\r\n        let newData = { ...formData }\r\n        if (changeKey) {\r\n            newData[changeKey] = e.target.value\r\n        }\r\n        else newData[e.target.id] = e.target.value\r\n        console.log(newData)\r\n        setFormData(newData)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        // Tao ra mot Object co ten la data\r\n        const request = new FormData()\r\n\r\n        // cho vong lap key trong data them tung key vao data\r\n        for (let key in formData) {\r\n            request.append(key, formData[key])\r\n        }\r\n        console.log(request)\r\n        // Su dung phuong thuc post de tra ve data \r\n        axios({\r\n            // phuong thuc post\r\n            method: 'POST',\r\n            // duong link api\r\n            url: 'http://localhost:5000/predict_fertilizer',\r\n            // data\r\n            data: request,\r\n            // nhieu du lieu\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n\r\n        }).then((res) => {\r\n            // cai dat lai data bang res.data (data o day la object)\r\n            const responseData = res.data;\r\n            console.log(responseData)\r\n            setPredictionData(responseData);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleBackClick = () => {\r\n        setPredictionData({})\r\n    }\r\n\r\n    const predictedFertilizer = fertilizerData[predictionData.final_prediction]\r\n\r\n\r\n\r\n    if (predictionData.final_prediction) {\r\n\r\n        const outputComponent = (\r\n\r\n            <div className=\"main\">\r\n                <Header isOpenModal={isOpenModal} setIsOpenModal={setIsOpenModal} />\r\n                <div className=\"output_container\">\r\n                    <Card className={`${classes.root} output_container__card`}>\r\n                        {/* <CardActionArea> */}\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={predictedFertilizer.title}\r\n                            height=\"225\"\r\n                            image={predictedFertilizer.imageUrl}\r\n                            title={predictedFertilizer.title}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n                                Đề xuất cho đất dùng phân bón <b>{predictedFertilizer.title}</b>\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\r\n                                {predictedFertilizer.description}\r\n                            </Typography>\r\n                            <br />\r\n\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell component=\"th\" align=\"center\"><b>Dự đoán mô hình XGBoost</b></TableCell>\r\n                                            <TableCell component=\"th\" align=\"center\"><b>Dự đoán mô hình ngẫu nhiên</b></TableCell>\r\n                                            <TableCell component=\"th\" align=\"center\"><b>Dự đoán mô hình SVM</b></TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\">{predictionData.xgb_model_prediction} ({predictionData.xgb_model_probability}%)</TableCell>\r\n                                            <TableCell align=\"center\">{predictionData.rf_model_prediction} ({predictionData.rf_model_probability}%)</TableCell>\r\n                                            <TableCell align=\"center\">{predictionData.svm_model_prediction} ({predictionData.svm_model_probability}%)</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n\r\n                        </CardContent>\r\n                        {/* </CardActionArea> */}\r\n                        <CardActions>\r\n                            <Button onClick={() => handleBackClick()} className=\"back__button\" variant=\"contained\" size=\"small\" color=\"primary\">\r\n                                Trở về trang dự đoán\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n\r\n        return outputComponent\r\n\r\n\r\n    }\r\n\r\n\r\n    else return (\r\n        <div className=\"main\">\r\n            <Header isOpenModal={isOpenModal} setIsOpenModal={setIsOpenModal} />\r\n\r\n            <div className=\"form\">\r\n                <div className=\"form__form_group\">\r\n\r\n                    {\r\n                        predictionData.error &&\r\n                        <Alert style={{ marginTop: \"20px\" }} severity=\"error\"> {predictionData.error} </Alert>\r\n                    }\r\n\r\n                    <center><div className=\"form__title\">Đề xuất phân bón cho đất</div></center>\r\n\r\n                    {\r\n                        formRenderData.map((formAttribute) => {\r\n                            return <TextField\r\n                                key={formAttribute.name}\r\n                                onChange={(e) => handleChange(e)}\r\n                                value={formData[formAttribute.name]}\r\n                                className=\"form__text_field\"\r\n                                id={formAttribute.name}\r\n                                name={formAttribute.name}\r\n                                variant=\"filled\"\r\n                                label={formAttribute.description}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n\r\n                    <TextField\r\n                        id=\"soil_type\"\r\n                        name=\"soil_type\"\r\n                        select\r\n                        label=\"Loại đất\"\r\n                        value={formData.soil_type}\r\n                        onChange={(e) => handleChange(e, \"soil_type\")}\r\n                        SelectProps={{\r\n                            native: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        className=\"form__text_field\"\r\n                    >\r\n                        <option key={\"select\"} value={\"select\"}>\r\n                            {\"Chọn\"}\r\n                        </option>\r\n                        {soilTypes.map((soiltype) => (\r\n                            <option key={soiltype} value={soiltype}>\r\n                                {soiltype}\r\n                            </option>\r\n                        ))}\r\n                    </TextField>\r\n\r\n\r\n                    <TextField\r\n                        id=\"soil_type\"\r\n                        name=\"soil_type\"\r\n                        select\r\n                        label=\"Loại hạt\"\r\n                        value={formData.crop_type}\r\n                        onChange={(e) => handleChange(e, \"crop_type\")}\r\n                        SelectProps={{\r\n                            native: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        className=\"form__text_field\"\r\n                    >\r\n                        <option key={\"select\"} value={\"select\"}>\r\n                            {\"Chọn\"}\r\n                        </option>\r\n                        {cropTypes.map((croptype) => (\r\n                            <option key={croptype} value={croptype}>\r\n                                {croptype}\r\n                            </option>\r\n                        ))}\r\n                    </TextField>\r\n\r\n                    {/* <div style={{display:\"flex\",justifyContent:\"space-around\", flexWrap:\"wrap\"}}>\r\n                <FormControl variant=\"filled\" className={`${classes.formControl} form__select`}>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Soil Type</InputLabel>\r\n                    <Select\r\n                    labelId=\"demo-simple-select-filled-label\"\r\n                    id=\"soil_type\"\r\n                    name=\"soil_type\"\r\n                    value={formData.soil_type}\r\n                    onChange={(e) => handleChange(e, \"soil_type\")}\r\n                    >\r\n                    {\r\n                        soilTypes.map((soiltype) => {\r\n                            return <MenuItem key={soiltype} value={soiltype}>{soiltype}</MenuItem>\r\n                        })\r\n                    }\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl variant=\"filled\" className={`${classes.formControl} form__select`}>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Crop Type</InputLabel>\r\n                    <Select\r\n                    labelId=\"demo-simple-select-filled-label\"\r\n                    id=\"crop_type\"\r\n                    name=\"crop_type\"\r\n                    value={formData.crop_type}\r\n                    onChange={(e) => handleChange(e, \"crop_type\")}\r\n                    >\r\n                    {\r\n                        cropTypes.map((cropType) => {\r\n                            return <MenuItem key={cropType} value={cropType}>{cropType}</MenuItem>\r\n                        })\r\n                    }\r\n                    </Select>\r\n                </FormControl>\r\n                </div> */}\r\n\r\n                    <Button onClick={() => handleClick()} className=\"form__button\" color=\"primary\" variant=\"contained\">Dự đoán phân bón</Button>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}