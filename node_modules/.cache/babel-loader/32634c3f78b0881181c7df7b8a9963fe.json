{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgound\\\\Desktop\\\\NCKH\\\\Web1\\\\frontend\\\\src\\\\pages\\\\ForumPage\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect } from \"react\";\nimport CommentModal from \"../../comments/CommentModal\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { BiUpvote, BiDownvote, BiComment, BiShareAlt } from \"react-icons/bi\";\nimport { format } from 'timeago.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst Post = () => {\n  _s();\n\n  const [openComment, setOpenComment] = useState(false); // const [like, setLike] = useState(post.likes.length);\n\n  const [upvote, setUpVote] = useState(false);\n  const [isUpVote, setIsUpVote] = useState(false);\n  const [downvote, setDownVote] = useState(false);\n  const [isDownVote, setIsDownVote] = useState(false);\n  const [posts, setPosts] = useState([]); // const [postImage, setPostImage] = useState('')\n\n  const [isLoading, setIsLoading] = useState(); // const [user, setUser] = useState({});\n  // const { user: currentUser } = useContext(AuthContext);\n  // useEffect(() => {\n  //   setIsLiked(post.likes.includes(currentUser._id));\n  // }, [currentUser._id, post.likes]);\n  // useEffect(() => {\n  //   const fetchUser = async () => {\n  //     const res = await axios.get(`/users?userId=${post.userId}`);\n  //     setUser(res.data);\n  //   };\n  //   fetchUser();\n  // }, [post.userId]);\n  // learn API with Easy Frontend\n  // const [postList, setPostList] = useState([]);\n  // useEffect(() => {\n  //   const fetchPostList = async () => {\n  //     try {\n  // const params = { _page: 1, _limit: 10 };\n  //       const response = await postList.getAll();\n  //       setPostList(response.data);\n  //     } catch (err) {\n  //     console.log(err)\n  //     }\n  //   }\n  //   fetchPostList();\n  // }, []);\n\n  const upvoteHandler = () => {\n    try {// axios.put(\"/posts/\" + post._id + \"/like\", { userId: currentUser._id });\n    } catch (err) {}\n\n    setUpVote(isUpVote ? upvote - 1 : upvote + 1);\n    setIsUpVote(!isUpVote);\n  };\n\n  const downvoteHandler = () => {\n    try {// axios.put(\"/posts/\" + post._id + \"/like\", { userId: currentUser._id });\n    } catch (err) {}\n\n    setDownVote(isDownVote ? downvote - 1 : downvote + 1);\n    setIsDownVote(!isDownVote);\n  };\n\n  const getPosts = () => {\n    setIsLoading(true);\n    axios.get(\"/api/posts\").then(res => {\n      const data = res.data;\n      let reverseData = data.reverse();\n      setPosts(reverseData);\n      setIsLoading(false);\n      console.log(\"Posts has been received\");\n    }).catch(err => {\n      alert(\"Error while get Post\");\n      setIsLoading(false);\n      console.log(err);\n    });\n  };\n\n  const displayPosts = posts => {\n    if (!posts.length) return null;\n    return posts.map((post, index) => /*#__PURE__*/_jsxDEV(PostItem, {\n      creatorAvatar: post.creatorAvatar,\n      creator: post.creator,\n      createTime: post.createTime,\n      status: post.status,\n      image: post.imageSrc\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this));\n  };\n\n  let configImageData = imgBase64 => {\n    var base64Flag = 'data:image/jpeg;base64,';\n    let image = base64Flag + imgBase64;\n    return image;\n  };\n\n  useLayoutEffect(() => {\n    getPosts(); // displayPosts(posts)\n  }, []);\n\n  const PostItem = post => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-overview\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.creatorAvatar,\n          alt: \"user-avatar\",\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-name clickable\",\n            children: post.creator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"time\",\n            children: format(post.createTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status\",\n      children: post.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      // src={image}\n      // src={post.image}\n      src: configImageData(post.image),\n      alt: \"post img fetch from db\",\n      className: \"post-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interaction-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"react-btn\",\n        onClick: upvoteHandler,\n        children: [/*#__PURE__*/_jsxDEV(BiUpvote, {\n          className: \"clickable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter\",\n          children: upvote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"react-btn\",\n        onClick: downvoteHandler,\n        children: [/*#__PURE__*/_jsxDEV(BiDownvote, {\n          className: \" clickable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter\",\n          children: downvote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BiComment, {\n        className: \"comment clickable\",\n        onClick: () => {\n          setOpenComment(true);\n        },\n        onDoubleClick: () => {\n          setOpenComment(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BiShareAlt, {\n        className: \"share-btn clickable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), openComment && /*#__PURE__*/_jsxDEV(CommentModal, {\n      closeModal: setOpenComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 20\n    }, this) : displayPosts(posts)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"I7GhGxyKamnUHl6NHniIftDuKNs=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/tgound/Desktop/NCKH/Web1/frontend/src/pages/ForumPage/Post.js"],"names":["React","useState","useLayoutEffect","CommentModal","LoadingSpinner","BiUpvote","BiDownvote","BiComment","BiShareAlt","format","axios","require","Post","openComment","setOpenComment","upvote","setUpVote","isUpVote","setIsUpVote","downvote","setDownVote","isDownVote","setIsDownVote","posts","setPosts","isLoading","setIsLoading","upvoteHandler","err","downvoteHandler","getPosts","get","then","res","data","reverseData","reverse","console","log","catch","alert","displayPosts","length","map","post","index","creatorAvatar","creator","createTime","status","imageSrc","configImageData","imgBase64","base64Flag","image","PostItem","id"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\r\nimport CommentModal from \"../../comments/CommentModal\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport { BiUpvote, BiDownvote, BiComment, BiShareAlt } from \"react-icons/bi\";\r\nimport { format } from 'timeago.js'\r\n\r\nconst axios = require('axios');\r\nconst Post = () => {\r\n  const [openComment, setOpenComment] = useState(false);\r\n\r\n  // const [like, setLike] = useState(post.likes.length);\r\n  const [upvote, setUpVote] = useState(false);\r\n  const [isUpVote, setIsUpVote] = useState(false);\r\n  const [downvote, setDownVote] = useState(false);\r\n  const [isDownVote, setIsDownVote] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  // const [postImage, setPostImage] = useState('')\r\n\r\n  const [isLoading, setIsLoading] = useState();\r\n\r\n  // const [user, setUser] = useState({});\r\n  // const { user: currentUser } = useContext(AuthContext);\r\n\r\n  // useEffect(() => {\r\n  //   setIsLiked(post.likes.includes(currentUser._id));\r\n  // }, [currentUser._id, post.likes]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchUser = async () => {\r\n  //     const res = await axios.get(`/users?userId=${post.userId}`);\r\n  //     setUser(res.data);\r\n  //   };\r\n  //   fetchUser();\r\n  // }, [post.userId]);\r\n\r\n  // learn API with Easy Frontend\r\n  // const [postList, setPostList] = useState([]);\r\n  // useEffect(() => {\r\n  //   const fetchPostList = async () => {\r\n  //     try {\r\n  // const params = { _page: 1, _limit: 10 };\r\n  //       const response = await postList.getAll();\r\n  //       setPostList(response.data);\r\n  //     } catch (err) {\r\n  //     console.log(err)\r\n  //     }\r\n  //   }\r\n  //   fetchPostList();\r\n  // }, []);\r\n\r\n  const upvoteHandler = () => {\r\n    try {\r\n      // axios.put(\"/posts/\" + post._id + \"/like\", { userId: currentUser._id });\r\n    } catch (err) { }\r\n    setUpVote(isUpVote ? upvote - 1 : upvote + 1);\r\n    setIsUpVote(!isUpVote);\r\n  };\r\n\r\n  const downvoteHandler = () => {\r\n    try {\r\n      // axios.put(\"/posts/\" + post._id + \"/like\", { userId: currentUser._id });\r\n    } catch (err) { }\r\n    setDownVote(isDownVote ? downvote - 1 : downvote + 1);\r\n    setIsDownVote(!isDownVote);\r\n  };\r\n\r\n\r\n  const getPosts = () => {\r\n    setIsLoading(true)\r\n    axios.get(\"/api/posts\")\r\n      .then((res) => {\r\n        const data = res.data;\r\n        let reverseData = data.reverse()\r\n        setPosts(reverseData);\r\n        setIsLoading(false)\r\n        console.log(\"Posts has been received\");\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error while get Post\")\r\n        setIsLoading(false)\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const displayPosts = (posts) => {\r\n\r\n    if (!posts.length) return null;\r\n\r\n    return posts.map((post, index) => (\r\n      <PostItem\r\n        key={index}\r\n        creatorAvatar={post.creatorAvatar}\r\n        creator={post.creator}\r\n        createTime={post.createTime}\r\n        status={post.status}\r\n        image={post.imageSrc}\r\n      />\r\n    ))\r\n\r\n  }\r\n\r\n  let configImageData = (imgBase64) => {\r\n    var base64Flag = 'data:image/jpeg;base64,';\r\n    let image = base64Flag + imgBase64\r\n    return image\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    getPosts()\r\n    // displayPosts(posts)\r\n  }, [])\r\n\r\n  const PostItem = post => (\r\n    <div className=\"thread\" key={post.id} >\r\n      <div className=\"user-overview\">\r\n        <div className=\"left-section\">\r\n          <img\r\n            src={post.creatorAvatar}\r\n            alt=\"user-avatar\"\r\n            className=\"avatar\"\r\n          />\r\n          <div className=\"info\">\r\n            <p className=\"user-name clickable\">{post.creator}</p>\r\n            <p className=\"time\">{format(post.createTime)}</p>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"badge\">Vip</div> */}\r\n      </div>\r\n      <p className=\"status\">{post.status}</p>\r\n      <img\r\n        // src={image}\r\n        // src={post.image}\r\n        src={configImageData(post.image)}\r\n        alt=\"post img fetch from db\"\r\n        className=\"post-img\"\r\n      />\r\n      <div className=\"interaction-bar\">\r\n        <div className=\"react-btn\" onClick={upvoteHandler}>\r\n          <BiUpvote className=\"clickable\" />\r\n          <div className=\"counter\">{upvote}</div>\r\n        </div>\r\n        <div className=\"react-btn\" onClick={downvoteHandler}>\r\n          <BiDownvote className=\" clickable\" />\r\n          <div className=\"counter\">{downvote}</div>\r\n        </div>\r\n        <BiComment\r\n          className=\"comment clickable\"\r\n          onClick={() => {\r\n            setOpenComment(true);\r\n          }}\r\n          onDoubleClick={() => {\r\n            setOpenComment(false);\r\n          }}\r\n        />\r\n\r\n        <BiShareAlt className=\"share-btn clickable\" />\r\n      </div>\r\n      {openComment && <CommentModal closeModal={setOpenComment} />}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      {isLoading ? <LoadingSpinner /> : displayPosts(posts)}\r\n    </div>\r\n  );\r\n}\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}